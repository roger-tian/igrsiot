<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- 加载配置JDBC文件 -->
    <context:property-placeholder location="classpath:db.properties" />
    <!-- 数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"><value>${driver-class-name}</value></property>
        <property name="url"><value>${url}</value></property>
        <property name="username"><value>${username}</value></property>
        <property name="password"><value>${password}</value></property>
    </bean>

    <!-- 开启注解配置 即Autowried -->
     <!--<context:annotation-config/>-->
    <!--其实component-scan 就有了annotation-config的功能即把需要的类注册到了spring容器中 -->

    <!-- 在使用mybatis时 spring使用sqlsessionFactoryBean 来管理mybatis的sqlsessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--<property name="configLocation" value="classpath:com/igrs/igrsiot/mapper/*Mapper.xml" />-->
        <property name="mapperLocations" value="classpath:com/igrs/igrsiot/mapper/*Mapper.xml" />
        <property name="typeAliasesPackage" value="com.igrs.igrsiot.domain" />
    </bean>

    <!--&lt;!&ndash; 配置SqlSessionTemplate &ndash;&gt;-->
    <!--<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
        <!--<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />-->
    <!--</bean>-->

    <!--动态代理实现 不用写dao的实现 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="classpath:com.igrs.igrsiot.mapper" />
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
        <!-- <property name="sqlSessionTemplateBeanName" value="sqlSession" /> -->
    </bean>

    <!--事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <context:component-scan base-package="com.igrs.igrsiot.service" />

    <tx:annotation-driven/>

    <mybatis:scan base-package="com.igrs.igrsiot.mapper" />
</beans>